import graphics, utils, input;

struct WindowFunction {
    str preset;
}

struct WindowButton {
    WindowFunction function;
    Icon icon;

    void constructor(Icon icon) {
        self.icon = icon;
    }

    void update(num x, num y, num size, Theme theme, Window win, Surface surface) {
        num hSize = size / 2; // hSize == halfSize
        bool hovered = utils:inBox(input:getMouseX(), input:getMouseY(), x - hSize, y - hSize, x + hSize, y + hSize);
        surface.setColor(hovered ? theme.tertiary : theme.secondary);
        surface.square(x, y, size, size, 10);
        if (self?.icon) {
            self.icon.draw(surface, x, y, size);
        }
    }
}

struct WindowRenderSettings {
    bool renderBase = true;
    bool renderMenuBar = true; // normally the topbar


}

struct Window {
    Surface surface;
    Frame frame;
    Frame contentFrame;

    Arr<WindowButton> buttons = [
        new WindowButton(new Icon())
    ];

    str title = "Window";

    WindowRenderSettings renderSettings = new WindowRenderSettings();

    void constructor(Frame frame) {
        self.frame = frame;
        self.surface = new Surface("pen", self!.frame);
    }
}